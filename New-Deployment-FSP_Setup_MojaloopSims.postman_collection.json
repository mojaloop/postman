{
	"info": {
		"_postman_id": "df1710ff-779a-42dd-a65f-23358405cecf",
		"name": "New-Deployment-FSP_Setup_MojaloopSims",
		"description": "Author: Sridevi Miriyala\nPurpose: Used to add new FSP and relevant Callback Information",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "FSP Onboarding",
			"item": [
				{
					"name": "Hub Account",
					"item": [
						{
							"name": "Add Hub Account-HUB_MULTILATERAL_SETTLEMENT",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"HUB_MULTILATERAL_SETTLEMENT\",\n  \"currency\": \"{{currency}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/Hub/accounts",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"Hub",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Hub Account-HUB_RECONCILIATION",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"HUB_RECONCILIATION\",\n  \"currency\": \"{{currency}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/Hub/accounts",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"Hub",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Hub Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/hub/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"hub",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Hub Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/hub/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"hub",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Hub Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/Hub/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"Hub",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "payerfsp ( TEST ACCOUNTS FOR QA PURPOSE )",
					"item": [
						{
							"name": "Add payerfsp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76c222f4-969b-4081-b4d7-133ebe48f50f",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"payerfsp\",\"currency\": \"{{currency}}\"}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add initial position and limits - payerfsp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d767079d-a9dd-401a-8d6a-5f94654c4259",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/{{payerfsp}}/initialPositionAndLimits",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"{{payerfsp}}",
										"initialPositionAndLimits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deposit Funds in Settlement Account - Payerfsp",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a96ad88c-c5e9-4077-b060-765ccd1e86e1",
										"exec": [
											"var uuid = require('uuid');",
											"var generatedUUID = uuid.v4();",
											"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
											"pm.environment.set('fundsInPrepareAmount', 5000);",
											"",
											"",
											"const payerfspGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/payerfsp/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(payerfspGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    var jsonData = response.json()",
											"    for(var i in jsonData) {",
											"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
											"            pm.environment.set(\"payerfspSettlementAccountId\",jsonData[i].id)",
											"            pm.environment.set(\"payerfspSettlementAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"        }",
											"    }",
											"});",
											"",
											"const hubGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    //var jsonData = response.json()",
											"    response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('currency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",account.value))",
											"    // for(var i in jsonData) {",
											"    //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"    //         pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"    //     }",
											"    // }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "96c26230-6092-4f78-882f-c5343b363fe1",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"setTimeout(function () {",
											"    const payerfspGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/'+pm.environment.get(\"payerfsp\")+'/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(payerfspGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var payerfspSettlementAccountBalanceAfterFundsIn",
											"        for(var i in jsonData) {",
											"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
											"                payerfspSettlementAccountBalanceAfterFundsIn = jsonData[i].value",
											"            }",
											"        }",
											"        var payerfspExpectedBalance = pm.environment.get('payerfspSettlementAccountBalanceBeforeFundsIn') - pm.environment.get('fundsInPrepareAmount')",
											"        pm.test(\"Final Payerfsp Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
											"            pm.expect(payerfspSettlementAccountBalanceAfterFundsIn).to.eql(payerfspExpectedBalance);",
											"          });    ",
											"    ",
											"    });",
											"    ",
											"    const hubGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var currentHubReconAccountBalance",
											"        response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('currency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => hubReconAccountBalanceAfterFundsIn = account.value)",
											"        // for(var i in jsonData) {",
											"        //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"        //         hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
											"        //     }",
											"        // }",
											"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")+pm.environment.get('fundsInPrepareAmount')",
											"        console.log(hubExpectedBalance)",
											"        pm.test(\"Final Hub Reconciliation Account Balance should increase by FundsIn Amount\", function () {",
											"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
											"          });  ",
											"    });",
											"}, 2000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/{{payerfsp}}/accounts/{{payerfspSettlementAccountId}}",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"{{payerfsp}}",
										"accounts",
										"{{payerfspSettlementAccountId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payerfsp callback - PARTICIPANT PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "hub_operator",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payerfsp callback - PARTICIPANT PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payerfsp callback - PARTICIPANT PUT Batch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/participants/{{requestId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payerfsp callback - PARTICIPANT PUT Batch Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/participants/{{requestId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payerfsp callback - PARTIES GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payerfsp callback - PARTIES PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payerfsp callback - PARTIES PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payerfsp callback - QUOTES",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payerfsp callback - TRANSFER POST",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/transfers\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payerfsp callback - TRANSFER PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payerfsp callback - TRANSFER ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "hub_operator",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "payerfsp",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "payerfsp",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "payeefsp ( TEST ACCOUNTS FOR QA PURPOSE )",
					"item": [
						{
							"name": "Add payeefsp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e301b75-8068-47e9-8248-d99fe928474c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"payeefsp\",\"currency\": \"{{currency}}\"}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add initial position and limits - payeefsp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb7f811e-1c26-46ab-a138-db682ffa96a0",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/initialPositionAndLimits",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"initialPositionAndLimits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deposit Funds - Payeefsp",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b74c5583-f1c5-4a5d-b614-b0b0229d6257",
										"exec": [
											"var uuid = require('uuid');",
											"var generatedUUID = uuid.v4();",
											"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
											"pm.environment.set('fundsInPrepareAmount', 5000);",
											"",
											"",
											"const payeefspGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/payeefsp/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(payeefspGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    var jsonData = response.json()",
											"    for(var i in jsonData) {",
											"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
											"            pm.environment.set(\"payeefspSettlementAccountId\",jsonData[i].id)",
											"            pm.environment.set(\"payeefspSettlementAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"        }",
											"    }",
											"});",
											"",
											"const hubGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    //var jsonData = response.json()",
											"    response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('currency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",account.value))",
											"    // for(var i in jsonData) {",
											"    //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"    //         pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"    //     }",
											"    // }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2b7013c0-79ab-48df-bb74-ad0114552201",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"setTimeout(function () {",
											"    const payeefspGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/'+pm.environment.get(\"payeefsp\")+'/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(payeefspGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var payeefspSettlementAccountBalanceAfterFundsIn",
											"        for(var i in jsonData) {",
											"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
											"                payeefspSettlementAccountBalanceAfterFundsIn = jsonData[i].value",
											"            }",
											"        }",
											"        var payeefspExpectedBalance = pm.environment.get('payeefspSettlementAccountBalanceBeforeFundsIn') - pm.environment.get('fundsInPrepareAmount')",
											"        pm.test(\"Final payeefsp Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
											"            pm.expect(payeefspSettlementAccountBalanceAfterFundsIn).to.eql(payeefspExpectedBalance);",
											"          });    ",
											"    ",
											"    });",
											"    ",
											"    const hubGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var currentHubReconAccountBalance",
											"        response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('currency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => hubReconAccountBalanceAfterFundsIn = account.value)",
											"        // for(var i in jsonData) {",
											"        //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"        //         hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
											"        //     }",
											"        // }",
											"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")+pm.environment.get('fundsInPrepareAmount')",
											"        console.log(hubExpectedBalance)",
											"        pm.test(\"Final Hub Reconciliation Account Balance should increase by FundsIn Amount\", function () {",
											"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
											"          });  ",
											"    });",
											"}, 2000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/{{payeefsp}}/accounts/{{payeefspSettlementAccountId}}",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"{{payeefsp}}",
										"accounts",
										"{{payeefspSettlementAccountId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payeefsp callback - PARTIES GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payeefsp callback - PARTIES PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payeefsp callback - PARTIES PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payeefsp callback - PARTICIPANT PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "hub_operator",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payeefsp callback - PARTICIPANT PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payeefsp callback - PARTICIPANT PUT Batch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/participants/{{requestId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payeefsp callback - PARTICIPANT PUT Batch Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/participants/{{requestId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payeefsp callback - QUOTES",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payeefsp callback - TRANSFER POST",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/transfers\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payeefsp callback - TRANSFER PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{payerfsp}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add payeefsp callback - TRANSFER ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "payerfsp",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payeefsp",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "noresponsepayeefsp (For Transfers Negative Scenarios)",
					"item": [
						{
							"name": "Add noresponsepayeefsp",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e301b75-8068-47e9-8248-d99fe928474c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"noresponsepayeefsp\",\"currency\": \"{{currency}}\"}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add initial position and limits",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d767079d-a9dd-401a-8d6a-5f94654c4259",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/noresponsepayeefsp/initialPositionAndLimits",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"noresponsepayeefsp",
										"initialPositionAndLimits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deposit Funds in Settlement Account - noresponsepayeefsp",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a96ad88c-c5e9-4077-b060-765ccd1e86e1",
										"exec": [
											"var uuid = require('uuid');",
											"var generatedUUID = uuid.v4();",
											"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
											"pm.environment.set('fundsInPrepareAmount', 5000);",
											"",
											"",
											"const noresponsepayeefspGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/noresponsepayeefsp/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(noresponsepayeefspGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    var jsonData = response.json()",
											"    for(var i in jsonData) {",
											"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
											"            pm.environment.set(\"noresponsepayeefspSettlementAccountId\",jsonData[i].id)",
											"            pm.environment.set(\"noresponsepayeefspSettlementAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"        }",
											"    }",
											"});",
											"",
											"const hubGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    //var jsonData = response.json()",
											"    response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('currency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",account.value))",
											"    // for(var i in jsonData) {",
											"    //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"    //         pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"    //     }",
											"    // }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "96c26230-6092-4f78-882f-c5343b363fe1",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"setTimeout(function () {",
											"    const noresponsepayeefspGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/noresponsepayeefsp/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(noresponsepayeefspGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var noresponsepayeefspSettlementAccountBalanceAfterFundsIn",
											"        for(var i in jsonData) {",
											"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
											"                noresponsepayeefspSettlementAccountBalanceAfterFundsIn = jsonData[i].value",
											"            }",
											"        }",
											"        var noresponsepayeefspExpectedBalance = pm.environment.get('noresponsepayeefspSettlementAccountBalanceBeforeFundsIn') - pm.environment.get('fundsInPrepareAmount')",
											"        pm.test(\"Final noresponsepayeefsp Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
											"            pm.expect(noresponsepayeefspSettlementAccountBalanceAfterFundsIn).to.eql(noresponsepayeefspExpectedBalance);",
											"          });    ",
											"    ",
											"    });",
											"    ",
											"    const hubGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var currentHubReconAccountBalance",
											"        response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('currency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => hubReconAccountBalanceAfterFundsIn = account.value)",
											"        // for(var i in jsonData) {",
											"        //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"        //         hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
											"        //     }",
											"        // }",
											"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")+pm.environment.get('fundsInPrepareAmount')",
											"        console.log(hubExpectedBalance)",
											"        pm.test(\"Final Hub Reconciliation Account Balance should increase by FundsIn Amount\", function () {",
											"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
											"          });  ",
											"    });",
											"}, 2000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/noresponsepayeefsp/accounts/{{noresponsepayeefspSettlementAccountId}}",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"noresponsepayeefsp",
										"accounts",
										"{{noresponsepayeefspSettlementAccountId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add noresponsepayeefsp callback - TRANSFER PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/noresponsepayeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"noresponsepayeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add noresponsepayeefsp callback - TRANSFER ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/noresponsepayeefsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"noresponsepayeefsp",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "payerfsp",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "payerfsp",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"payerfsp",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "testfsp1 (for settlements testing)",
					"item": [
						{
							"name": "Add testfsp1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e301b75-8068-47e9-8248-d99fe928474c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"testfsp1\",\"currency\": \"{{currency}}\"}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add initial position and limits - testfsp1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb7f811e-1c26-46ab-a138-db682ffa96a0",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/initialPositionAndLimits",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"initialPositionAndLimits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deposit Funds - testfsp1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b74c5583-f1c5-4a5d-b614-b0b0229d6257",
										"exec": [
											"var uuid = require('uuid');",
											"var generatedUUID = uuid.v4();",
											"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
											"pm.environment.set('fundsInPrepareAmount', 5000);",
											"",
											"",
											"const testfsp1GetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/testfsp1/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(testfsp1GetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    var jsonData = response.json()",
											"    for(var i in jsonData) {",
											"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
											"            pm.environment.set(\"testfsp1SettlementAccountId\",jsonData[i].id)",
											"            pm.environment.set(\"testfsp1SettlementAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"        }",
											"    }",
											"});",
											"",
											"const hubGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    //var jsonData = response.json()",
											"    response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('currency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",account.value))",
											"    // for(var i in jsonData) {",
											"    //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"    //         pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"    //     }",
											"    // }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2b7013c0-79ab-48df-bb74-ad0114552201",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"setTimeout(function () {",
											"    const testfsp1GetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/testfsp1/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(testfsp1GetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var testfsp1SettlementAccountBalanceAfterFundsIn",
											"        for(var i in jsonData) {",
											"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
											"                testfsp1SettlementAccountBalanceAfterFundsIn = jsonData[i].value",
											"            }",
											"        }",
											"        var testfsp1ExpectedBalance = pm.environment.get('testfsp1SettlementAccountBalanceBeforeFundsIn') - pm.environment.get('fundsInPrepareAmount')",
											"        pm.test(\"Final testfsp1 Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
											"            pm.expect(testfsp1SettlementAccountBalanceAfterFundsIn).to.eql(testfsp1ExpectedBalance);",
											"          });    ",
											"    ",
											"    });",
											"    ",
											"    const hubGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var currentHubReconAccountBalance",
											"        response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('currency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => hubReconAccountBalanceAfterFundsIn = account.value)",
											"        // for(var i in jsonData) {",
											"        //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"        //         hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
											"        //     }",
											"        // }",
											"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")+pm.environment.get('fundsInPrepareAmount')",
											"        console.log(hubExpectedBalance)",
											"        pm.test(\"Final Hub Reconciliation Account Balance should increase by FundsIn Amount\", function () {",
											"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
											"          });  ",
											"    });",
											"}, 2000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/accounts/{{testfsp1SettlementAccountId}}",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"accounts",
										"{{testfsp1SettlementAccountId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp1 callback - PARTIES GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "hub_operator",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp1 callback - PARTIES PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP1_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp1 callback - PARTIES PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP1_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp1 callback - PARTICIPANT PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP1_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp1 callback - PARTICIPANT PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP1_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp1 callback - PARTICIPANT PUT Batch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP1_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/participants/{{requestId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp1 callback - PARTICIPANT PUT Batch Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP1_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/participants/{{requestId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp1 callback - QUOTES",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp1 callback - TRANSFER POST",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/transfers\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp1 callback - TRANSFER PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp1 callback - TRANSFER ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp1",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "testfsp2 (For Settlements Testing)",
					"item": [
						{
							"name": "Add testfsp2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e301b75-8068-47e9-8248-d99fe928474c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"testfsp2\",\"currency\": \"{{currency}}\"}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add initial position and limits - testfsp2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb7f811e-1c26-46ab-a138-db682ffa96a0",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/initialPositionAndLimits",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"initialPositionAndLimits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deposit Funds - testfsp2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b74c5583-f1c5-4a5d-b614-b0b0229d6257",
										"exec": [
											"var uuid = require('uuid');",
											"var generatedUUID = uuid.v4();",
											"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
											"pm.environment.set('fundsInPrepareAmount', 5000);",
											"",
											"",
											"const testfsp2GetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/testfsp2/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(testfsp2GetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    var jsonData = response.json()",
											"    for(var i in jsonData) {",
											"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
											"            pm.environment.set(\"testfsp2SettlementAccountId\",jsonData[i].id)",
											"            pm.environment.set(\"testfsp2SettlementAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"        }",
											"    }",
											"});",
											"",
											"const hubGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    //var jsonData = response.json()",
											"    response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('currency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",account.value))",
											"    // for(var i in jsonData) {",
											"    //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"    //         pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"    //     }",
											"    // }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2b7013c0-79ab-48df-bb74-ad0114552201",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"setTimeout(function () {",
											"    const testfsp2GetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/testfsp2/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(testfsp2GetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var testfsp2SettlementAccountBalanceAfterFundsIn",
											"        for(var i in jsonData) {",
											"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
											"                testfsp2SettlementAccountBalanceAfterFundsIn = jsonData[i].value",
											"            }",
											"        }",
											"        var testfsp2ExpectedBalance = pm.environment.get('testfsp2SettlementAccountBalanceBeforeFundsIn') - pm.environment.get('fundsInPrepareAmount')",
											"        pm.test(\"Final testfsp2 Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
											"            pm.expect(testfsp2SettlementAccountBalanceAfterFundsIn).to.eql(testfsp2ExpectedBalance);",
											"          });    ",
											"    ",
											"    });",
											"    ",
											"    const hubGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var currentHubReconAccountBalance",
											"        response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('currency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => hubReconAccountBalanceAfterFundsIn = account.value)",
											"        // for(var i in jsonData) {",
											"        //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"        //         hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
											"        //     }",
											"        // }",
											"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")+pm.environment.get('fundsInPrepareAmount')",
											"        console.log(hubExpectedBalance)",
											"        pm.test(\"Final Hub Reconciliation Account Balance should increase by FundsIn Amount\", function () {",
											"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
											"          });  ",
											"    });",
											"}, 2000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/accounts/{{testfsp2SettlementAccountId}}",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"accounts",
										"{{testfsp2SettlementAccountId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp2 callback - PARTIES GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP2_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp2 callback - PARTIES PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP2_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp2 callback - PARTIES PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP2_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp2 callback - PARTICIPANT PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP2_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp2 callback - PARTICIPANT PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP2_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp2 callback - PARTICIPANT PUT Batch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP2_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/participants/{{requestId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp2 callback - PARTICIPANT PUT Batch Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TESTFSP2_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/participants/{{requestId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp2 callback - QUOTES",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp2 callback - TRANSFER POST",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/transfers\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp2 callback - TRANSFER PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp2 callback - TRANSFER ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp2",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "testfsp3 (For FOREX Testing)",
					"item": [
						{
							"name": "Add testfsp3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e301b75-8068-47e9-8248-d99fe928474c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"testfsp3\",\"currency\": \"EUR\"}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add initial position and limits - testfsp3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb7f811e-1c26-46ab-a138-db682ffa96a0",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"currency\": \"EUR\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/initialPositionAndLimits",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"initialPositionAndLimits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deposit Funds - testfsp3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b74c5583-f1c5-4a5d-b614-b0b0229d6257",
										"exec": [
											"var uuid = require('uuid');",
											"var generatedUUID = uuid.v4();",
											"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
											"pm.environment.set('fundsInPrepareAmount', 5000);",
											"",
											"",
											"const testfsp3GetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/testfsp3/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(testfsp3GetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    var jsonData = response.json()",
											"    for(var i in jsonData) {",
											"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT' && jsonData[i].currency === pm.environment.get('testfsp3ForexCurrency')) {",
											"            pm.environment.set(\"testfsp3SettlementAccountId\",jsonData[i].id)",
											"            pm.environment.set(\"testfsp3SettlementAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"        }",
											"    }",
											"});",
											"",
											"const hubGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    //var jsonData = response.json()",
											"    response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('testfsp3ForexCurrency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",account.value))",
											"    // for(var i in jsonData) {",
											"    //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"    //         pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"    //     }",
											"    // }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2b7013c0-79ab-48df-bb74-ad0114552201",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"setTimeout(function () {",
											"    const testfsp3GetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/testfsp3/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(testfsp3GetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var testfsp3SettlementAccountBalanceAfterFundsIn",
											"        for(var i in jsonData) {",
											"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT' && jsonData[i].currency === pm.environment.get('testfsp3ForexCurrency')) {",
											"                testfsp3SettlementAccountBalanceAfterFundsIn = jsonData[i].value",
											"            }",
											"        }",
											"        var testfsp3ExpectedBalance = pm.environment.get('testfsp3SettlementAccountBalanceBeforeFundsIn') - pm.environment.get('fundsInPrepareAmount')",
											"        pm.test(\"Final testfsp3 Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
											"            pm.expect(testfsp3SettlementAccountBalanceAfterFundsIn).to.eql(testfsp3ExpectedBalance);",
											"          });    ",
											"    ",
											"    });",
											"    ",
											"    const hubGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var currentHubReconAccountBalance",
											"        response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('testfsp3ForexCurrency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => hubReconAccountBalanceAfterFundsIn = account.value)",
											"        // for(var i in jsonData) {",
											"        //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"        //         hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
											"        //     }",
											"        // }",
											"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")+pm.environment.get('fundsInPrepareAmount')",
											"        console.log(hubExpectedBalance)",
											"        pm.test(\"Final Hub Reconciliation Account Balance should increase by FundsIn Amount\", function () {",
											"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
											"          });  ",
											"    });",
											"}, 2000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{testfsp3ForexCurrency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/accounts/{{testfsp3SettlementAccountId}}",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"accounts",
										"{{testfsp3SettlementAccountId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp3 callback - PARTIES GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"{{TESTFSP3_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp3 callback - PARTIES PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"{{TESTFSP3_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp3 callback - PARTIES PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"{{TESTFSP3_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp3 callback - PARTICIPANT PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"{{TESTFSP3_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp3 callback - PARTICIPANT PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"{{TESTFSP3_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp3 callback - PARTICIPANT PUT Batch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"{{TESTFSP3_CALLBACK_URL}}/participants/{{requestId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp3 callback - PARTICIPANT PUT Batch Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"{{TESTFSP3_CALLBACK_URL}}/participants/{{requestId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp3 callback - QUOTES",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"{{TESTFSP3_CALLBACK_URL}}\"\n}\n"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp3 callback - TRANSFER POST",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"{{TESTFSP3_CALLBACK_URL}}/transfers\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp3 callback - TRANSFER PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{TESTFSP3_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp3 callback - TRANSFER ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{TESTFSP3_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp3/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp3",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "testfsp4 (For FOREX Testing)",
					"item": [
						{
							"name": "Add testfsp4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e301b75-8068-47e9-8248-d99fe928474c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"testfsp4\",\"currency\": \"{{currency}}\"}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add initial position and limits - testfsp4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb7f811e-1c26-46ab-a138-db682ffa96a0",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/initialPositionAndLimits",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"initialPositionAndLimits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deposit Funds - testfsp4",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b74c5583-f1c5-4a5d-b614-b0b0229d6257",
										"exec": [
											"var uuid = require('uuid');",
											"var generatedUUID = uuid.v4();",
											"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
											"pm.environment.set('fundsInPrepareAmount', 5000);",
											"",
											"",
											"const testfsp4GetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/testfsp4/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(testfsp4GetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    var jsonData = response.json()",
											"    for(var i in jsonData) {",
											"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT' && jsonData[i].currency === pm.environment.get('testfsp4ForexCurrency')) {",
											"            pm.environment.set(\"testfsp4SettlementAccountId\",jsonData[i].id)",
											"            pm.environment.set(\"testfsp4SettlementAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"        }",
											"    }",
											"});",
											"",
											"const hubGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    //var jsonData = response.json()",
											"    response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('testfsp4ForexCurrency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",account.value))",
											"    // for(var i in jsonData) {",
											"    //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"    //         pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"    //     }",
											"    // }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2b7013c0-79ab-48df-bb74-ad0114552201",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"setTimeout(function () {",
											"    const testfsp4GetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/testfsp4/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(testfsp4GetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var testfsp4SettlementAccountBalanceAfterFundsIn",
											"        for(var i in jsonData) {",
											"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT' && jsonData[i].currency === pm.environment.get('testfsp4ForexCurrency')) {",
											"                testfsp4SettlementAccountBalanceAfterFundsIn = jsonData[i].value",
											"            }",
											"        }",
											"        var testfsp4ExpectedBalance = pm.environment.get('testfsp4SettlementAccountBalanceBeforeFundsIn') - pm.environment.get('fundsInPrepareAmount')",
											"        pm.test(\"Final testfsp4 Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
											"            pm.expect(testfsp4SettlementAccountBalanceAfterFundsIn).to.eql(testfsp4ExpectedBalance);",
											"          });    ",
											"    ",
											"    });",
											"    ",
											"    const hubGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var currentHubReconAccountBalance",
											"        response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === pm.environment.get('testfsp4ForexCurrency') && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => hubReconAccountBalanceAfterFundsIn = account.value)",
											"        // for(var i in jsonData) {",
											"        //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"        //         hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
											"        //     }",
											"        // }",
											"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")+pm.environment.get('fundsInPrepareAmount')",
											"        console.log(hubExpectedBalance)",
											"        pm.test(\"Final Hub Reconciliation Account Balance should increase by FundsIn Amount\", function () {",
											"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
											"          });  ",
											"    });",
											"}, 2000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{testfsp4ForexCurrency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/accounts/{{testfsp4SettlementAccountId}}",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"accounts",
										"{{testfsp4SettlementAccountId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp4 callback - PARTIES GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"{{TESTFSP4_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp4 callback - PARTIES PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"{{TESTFSP4_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp4 callback - PARTIES PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"{{TESTFSP4_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp4 callback - PARTICIPANT PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"{{TESTFSP4_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp4 callback - PARTICIPANT PUT Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"{{TESTFSP4_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp4 callback - PARTICIPANT PUT Batch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"{{TESTFSP4_CALLBACK_URL}}/participants/{{requestId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp4 callback - PARTICIPANT PUT Batch Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"{{TESTFSP4_CALLBACK_URL}}/participants/{{requestId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp4 callback - QUOTES",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL\",\n  \"value\": \"{{TESTFSP4_CALLBACK_URL}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp4 callback - TRANSFER POST",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"{{TESTFSP4_CALLBACK_URL}}/transfers\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp4 callback - TRANSFER PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{TESTFSP4_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add testfsp4 callback - TRANSFER ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{TESTFSP4_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp4/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"testfsp4",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "DFSPEUR",
					"item": [
						{
							"name": "Add DFSPEUR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e301b75-8068-47e9-8248-d99fe928474c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"DFSPEUR\",\"currency\": \"EUR\"}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add initial position and limits - DFSPEUR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb7f811e-1c26-46ab-a138-db682ffa96a0",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"currency\": \"EUR\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPEUR/initialPositionAndLimits",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPEUR",
										"initialPositionAndLimits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deposit Funds - DFSPEUR",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b74c5583-f1c5-4a5d-b614-b0b0229d6257",
										"exec": [
											"var uuid = require('uuid');",
											"var generatedUUID = uuid.v4();",
											"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
											"pm.environment.set('fundsInPrepareAmount', 5000);",
											"",
											"",
											"const DFSPEURGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/DFSPEUR/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(DFSPEURGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    var jsonData = response.json()",
											"    for(var i in jsonData) {",
											"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT' && jsonData[i].currency === 'EUR') {",
											"            pm.environment.set(\"DFSPEURSettlementAccountId\",jsonData[i].id)",
											"            pm.environment.set(\"DFSPEURSettlementAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"        }",
											"    }",
											"});",
											"",
											"const hubGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    //var jsonData = response.json()",
											"    response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === 'EUR' && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",account.value))",
											"    // for(var i in jsonData) {",
											"    //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"    //         pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"    //     }",
											"    // }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2b7013c0-79ab-48df-bb74-ad0114552201",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"setTimeout(function () {",
											"    const DFSPEURGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/DFSPEUR/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(DFSPEURGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var DFSPEURSettlementAccountBalanceAfterFundsIn",
											"        for(var i in jsonData) {",
											"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT' && jsonData[i].currency === 'EUR') {",
											"                DFSPEURSettlementAccountBalanceAfterFundsIn = jsonData[i].value",
											"            }",
											"        }",
											"        var DFSPEURExpectedBalance = pm.environment.get('DFSPEURSettlementAccountBalanceBeforeFundsIn') - pm.environment.get('fundsInPrepareAmount')",
											"        pm.test(\"Final DFSPEUR Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
											"            pm.expect(DFSPEURSettlementAccountBalanceAfterFundsIn).to.eql(DFSPEURExpectedBalance);",
											"          });    ",
											"    ",
											"    });",
											"    ",
											"    const hubGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var currentHubReconAccountBalance",
											"        response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === 'EUR' && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => hubReconAccountBalanceAfterFundsIn = account.value)",
											"        // for(var i in jsonData) {",
											"        //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"        //         hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
											"        //     }",
											"        // }",
											"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")+pm.environment.get('fundsInPrepareAmount')",
											"        console.log(hubExpectedBalance)",
											"        pm.test(\"Final Hub Reconciliation Account Balance should increase by FundsIn Amount\", function () {",
											"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
											"          });  ",
											"    });",
											"}, 2000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"EUR\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPEUR/accounts/{{DFSPEURSettlementAccountId}}",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPEUR",
										"accounts",
										"{{DFSPEURSettlementAccountId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add DFSPEUR callback - PARTICIPANTS/PARTIES (Do not use in ML) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSIOP_CALLBACK_URL\",\n  \"value\": \"http://fxp-mojaloop-fxp-adapter.fxp.svc.cluster.local:8000/DFSPEUR\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPEUR/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPEUR",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add DFSPEUR callback - TRANSFER POST",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"http://fxp-mojaloop-fxp-adapter.fxp.svc.cluster.local:8000/transfers\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPEUR/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPEUR",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add DFSPEUR callback - TRANSFER PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"http://fxp-mojaloop-fxp-adapter.fxp.svc.cluster.local:8000/transfers/{{transferId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPEUR/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPEUR",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add DFSPEUR callback - TRANSFER ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"http://fxp-mojaloop-fxp-adapter.fxp.svc.cluster.local:8000/transfers/{{transferId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPEUR/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPEUR",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7529aa47-7c2d-4698-bc1d-9bd2bc5c9a1a",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPEUR/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPEUR",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "621c5234-f12d-44de-bbec-6cc914f96088",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPEUR/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPEUR",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89f4b093-7a6a-440e-bf26-3642639d00f6",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/simdfsp1/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"simdfsp1",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3069dbcb-06ef-4269-8432-efd5c265d55d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5e0ae123-6434-4823-b066-51046812a326",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "DFSPMAD",
					"item": [
						{
							"name": "Add DFSPMAD",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e301b75-8068-47e9-8248-d99fe928474c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\": \"DFSPMAD\",\"currency\": \"MAD\"}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add initial position and limits - DFSPMAD",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb7f811e-1c26-46ab-a138-db682ffa96a0",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"currency\": \"MAD\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPMAD/initialPositionAndLimits",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPMAD",
										"initialPositionAndLimits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deposit Funds - DFSPMAD",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b74c5583-f1c5-4a5d-b614-b0b0229d6257",
										"exec": [
											"var uuid = require('uuid');",
											"var generatedUUID = uuid.v4();",
											"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
											"pm.environment.set('fundsInPrepareAmount', 5000);",
											"",
											"",
											"const DFSPMADGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/DFSPMAD/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(DFSPMADGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    var jsonData = response.json()",
											"    for(var i in jsonData) {",
											"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT' && jsonData[i].currency === 'EUR') {",
											"            pm.environment.set(\"DFSPMADSettlementAccountId\",jsonData[i].id)",
											"            pm.environment.set(\"DFSPMADSettlementAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"        }",
											"    }",
											"});",
											"",
											"const hubGetStatusRequest = {",
											"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"  method: 'GET',",
											"  header: {",
											"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"      \"Content-Type\": \"application/json\"",
											"  }",
											"};",
											"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"    console.log(response.json())",
											"    //var jsonData = response.json()",
											"    response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === 'EUR' && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",account.value))",
											"    // for(var i in jsonData) {",
											"    //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"    //         pm.environment.set(\"hubReconAccountBalanceBeforeFundsIn\",jsonData[i].value)",
											"    //     }",
											"    // }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2b7013c0-79ab-48df-bb74-ad0114552201",
										"exec": [
											"pm.test(\"Status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"setTimeout(function () {",
											"    const DFSPMADGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/DFSPMAD/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(DFSPMADGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var DFSPMADSettlementAccountBalanceAfterFundsIn",
											"        for(var i in jsonData) {",
											"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT' && jsonData[i].currency === 'EUR') {",
											"                DFSPMADSettlementAccountBalanceAfterFundsIn = jsonData[i].value",
											"            }",
											"        }",
											"        var DFSPMADExpectedBalance = pm.environment.get('DFSPMADSettlementAccountBalanceBeforeFundsIn') - pm.environment.get('fundsInPrepareAmount')",
											"        pm.test(\"Final DFSPMAD Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
											"            pm.expect(DFSPMADSettlementAccountBalanceAfterFundsIn).to.eql(DFSPMADExpectedBalance);",
											"          });    ",
											"    ",
											"    });",
											"    ",
											"    const hubGetStatusRequest = {",
											"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/hub/accounts',",
											"      method: 'GET',",
											"      header: {",
											"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
											"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
											"          \"Content-Type\": \"application/json\"",
											"      }",
											"    };",
											"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
											"        console.log(response.json())",
											"        var jsonData = response.json()",
											"        var currentHubReconAccountBalance",
											"        response.json()",
											"        .filter( ledgerAccount => (ledgerAccount.currency === 'EUR' && ledgerAccount.ledgerAccountType === 'HUB_RECONCILIATION'))",
											"        .forEach(account => hubReconAccountBalanceAfterFundsIn = account.value)",
											"        // for(var i in jsonData) {",
											"        //     if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
											"        //         hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
											"        //     }",
											"        // }",
											"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")+pm.environment.get('fundsInPrepareAmount')",
											"        console.log(hubExpectedBalance)",
											"        pm.test(\"Final Hub Reconciliation Account Balance should increase by FundsIn Amount\", function () {",
											"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
											"          });  ",
											"    });",
											"}, 2000)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"MAD\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPMAD/accounts/{{DFSPMADSettlementAccountId}}",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPMAD",
										"accounts",
										"{{DFSPMADSettlementAccountId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add DFSPXOF callback - PARTICIPANTS/PARTIES",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSIOP_CALLBACK_URL\",\n  \"value\": \"http://fxp-mojaloop-fxp-adapter.fxp.svc.cluster.local:8000/DFSPXOF\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPXOF/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPXOF",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add DFSPXOF callback - TRANSFER POST",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"http://fxp-mojaloop-fxp-adapter.fxp.svc.cluster.local:8000/transfers\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPXOF/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPXOF",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add DFSPXOF callback - TRANSFER PUT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"http://fxp-mojaloop-fxp-adapter.fxp.svc.cluster.local:8000/transfers/{{transferId}}\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPXOF/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPXOF",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add DFSPXOF callback - TRANSFER ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb928ca3-8904-4cff-94fa-9629ccf2418d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"http://fxp-mojaloop-fxp-adapter.fxp.svc.cluster.local:8000/transfers/{{transferId}}/error\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPXOF/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPXOF",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3f8da94-fecb-46d8-bc3d-dfa606d6d20f",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPXOF/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPXOF",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c40bcd27-6089-4c34-965f-9be9166a214c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"value": "{{hub_operator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPXOF/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPXOF",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81e94a62-d9ff-4989-b574-edd0efe6ba05",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "FSPIOP-Source",
										"type": "text",
										"value": "{{hub_operator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
								},
								"url": {
									"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/DFSPXOF/endpoints",
									"host": [
										"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
									],
									"path": [
										"participants",
										"DFSPXOF",
										"endpoints"
									]
								},
								"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
							},
							"response": [
								{
									"name": "2. Create Initial Position and Limits",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
										},
										"url": {
											"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
											"protocol": "http",
											"host": [
												"test-central-ledger",
												"mojaloop",
												"live"
											],
											"path": [
												"admin",
												"participants",
												"testfsp",
												"initialPositionAndLimits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "733b82a3-a8ca-492d-9052-8184ee211b62",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e7650ad7-36cd-4f3f-a016-b0055cf825f2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Oracle Onboarding",
			"item": [
				{
					"name": "Register MSISDN Oracle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "Postman-Token",
								"value": "003d55c1-2ebc-4e25-b9da-26bf053a8a5c"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oracleIdType\": \"MSISDN\",\n  \"endpoint\": {\n    \"value\": \"{{HOST_SIMULATOR}}/oracle\",\n    \"endpointType\": \"URL\"\n  },\n  \"currency\": \"USD\",\n  \"isDefault\": true\n}"
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_ADMIN}}/oracles",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_ADMIN}}"
							],
							"path": [
								"oracles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register {{payeefspMSISDN}} in MSISDN Oracle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "FSPIOP-Source",
								"value": "payeefsp"
							},
							{
								"key": "Postman-Token",
								"value": "7aa4c9f3-1738-49f0-8904-7821e2336692,4127ff87-7d17-483c-8e3e-f0b562a16d84"
							},
							{
								"key": "User-Agent",
								"value": "PostmanRuntime/7.11.0"
							},
							{
								"key": "accept-encoding",
								"value": "gzip, deflate"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fspId\": \"payeefsp\",\n    \"currency\": \"USD\"\n}"
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_SERVICE}}/participants/MSISDN/{{payeefspMSISDN}}",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_SERVICE}}"
							],
							"path": [
								"participants",
								"MSISDN",
								"{{payeefspMSISDN}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register BUSINESS Oracle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "Postman-Token",
								"value": "003d55c1-2ebc-4e25-b9da-26bf053a8a5c"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oracleIdType\": \"BUSINESS\",\n  \"endpoint\": {\n    \"value\": \"{{HOST_SIMULATOR}}/oracle\",\n    \"endpointType\": \"URL\"\n  },\n  \"currency\": \"USD\",\n  \"isDefault\": true\n}"
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_ADMIN}}/oracles",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_ADMIN}}"
							],
							"path": [
								"oracles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register {{merchantId}} in BUSINESS Oracle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "FSPIOP-Source",
								"value": "payeefsp"
							},
							{
								"key": "Postman-Token",
								"value": "7aa4c9f3-1738-49f0-8904-7821e2336692,4127ff87-7d17-483c-8e3e-f0b562a16d84"
							},
							{
								"key": "User-Agent",
								"value": "PostmanRuntime/7.11.0"
							},
							{
								"key": "accept-encoding",
								"value": "gzip, deflate"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fspId\": \"payeefsp\",\n    \"currency\": \"USD\"\n}"
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_SERVICE}}/participants/BUSINESS/{{merchantId}}",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_SERVICE}}"
							],
							"path": [
								"participants",
								"BUSINESS",
								"{{merchantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register ALIAS Oracle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "Postman-Token",
								"value": "003d55c1-2ebc-4e25-b9da-26bf053a8a5c"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oracleIdType\": \"ALIAS\",\n  \"endpoint\": {\n    \"value\": \"{{HOST_SIMULATOR}}/oracle\",\n    \"endpointType\": \"URL\"\n  },\n  \"currency\": \"USD\",\n  \"isDefault\": true\n}"
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_ADMIN}}/oracles",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_ADMIN}}"
							],
							"path": [
								"oracles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register {{aliasId}} in ALIAS Oracle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.interoperability.participants+json;version=1"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.interoperability.participants+json;version=1.0"
							},
							{
								"key": "Date",
								"value": ""
							},
							{
								"key": "FSPIOP-Source",
								"value": "payeefsp"
							},
							{
								"key": "Postman-Token",
								"value": "7aa4c9f3-1738-49f0-8904-7821e2336692,4127ff87-7d17-483c-8e3e-f0b562a16d84"
							},
							{
								"key": "User-Agent",
								"value": "PostmanRuntime/7.11.0"
							},
							{
								"key": "accept-encoding",
								"value": "gzip, deflate"
							},
							{
								"key": "cache-control",
								"value": "no-cache"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fspId\": \"payeefsp\",\n    \"currency\": \"USD\"\n}"
						},
						"url": {
							"raw": "{{HOST_ACCOUNT_LOOKUP_SERVICE}}/participants/ALIAS/{{aliasID}}",
							"host": [
								"{{HOST_ACCOUNT_LOOKUP_SERVICE}}"
							],
							"path": [
								"participants",
								"ALIAS",
								"{{aliasID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add Users to Simulators",
			"item": [
				{
					"name": "payeefsp",
					"item": [
						{
							"name": "Add {{payeefspMSISDN}} to payeefsp",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aa912d5a-10e9-444a-970c-c005e307b713",
										"exec": [
											"pm.environment.set('fullName', 'SimFirst SimLast');",
											"pm.environment.set('firstName', 'SimFirst');",
											"pm.environment.set('middleName', 'SimMiddle');",
											"pm.environment.set('lastName', 'SimLast');",
											"pm.environment.set('dob', '2010-10-10');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "04a7ae97-9c85-439d-806d-cc44575537b2",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 500]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"displayName\": \"{{fullName}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"middleName\": \"{{middleName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"dateOfBirth\": \"{{dob}}\",\n    \"idType\": \"MSISDN\",\n    \"idValue\": \"{{payeefspMSISDN}}\"\n}"
								},
								"url": {
									"raw": "{{PAYEEFSP_BACKEND_TESTAPI_URL}}/repository/parties",
									"host": [
										"{{PAYEEFSP_BACKEND_TESTAPI_URL}}"
									],
									"path": [
										"repository",
										"parties"
									]
								},
								"description": "Create a party in payeefsp. So that GET /parties can be successful."
							},
							"response": [
								{
									"name": "An error occured processing the request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/repository/parties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"repository",
												"parties"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The party was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/repository/parties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"repository",
												"parties"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add {{merchantId}} to payeefsp",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aa912d5a-10e9-444a-970c-c005e307b713",
										"exec": [
											"pm.environment.set('fullName', 'SimFirst SimLast');",
											"pm.environment.set('firstName', 'SimFirst');",
											"pm.environment.set('middleName', 'SimMiddle');",
											"pm.environment.set('lastName', 'SimLast');",
											"pm.environment.set('dob', '2010-10-10');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "04a7ae97-9c85-439d-806d-cc44575537b2",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 500]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"displayName\": \"{{fullName}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"middleName\": \"{{middleName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"dateOfBirth\": \"{{dob}}\",\n    \"idType\": \"BUSINESS\",\n    \"idValue\": \"{{merchantId}}\"\n}"
								},
								"url": {
									"raw": "{{PAYEEFSP_BACKEND_TESTAPI_URL}}/repository/parties",
									"host": [
										"{{PAYEEFSP_BACKEND_TESTAPI_URL}}"
									],
									"path": [
										"repository",
										"parties"
									]
								},
								"description": "Create a party in payeefsp. So that GET /parties can be successful."
							},
							"response": [
								{
									"name": "An error occured processing the request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/repository/parties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"repository",
												"parties"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The party was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/repository/parties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"repository",
												"parties"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add {{aliasId}} to payeefsp",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aa912d5a-10e9-444a-970c-c005e307b713",
										"exec": [
											"pm.environment.set('fullName', 'SimFirst SimLast');",
											"pm.environment.set('firstName', 'SimFirst');",
											"pm.environment.set('middleName', 'SimMiddle');",
											"pm.environment.set('lastName', 'SimLast');",
											"pm.environment.set('dob', '2010-10-10');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "04a7ae97-9c85-439d-806d-cc44575537b2",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 500]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"displayName\": \"{{fullName}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"middleName\": \"{{middleName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"dateOfBirth\": \"{{dob}}\",\n    \"idType\": \"ALIAS\",\n    \"idValue\": \"{{aliasID}}\"\n}"
								},
								"url": {
									"raw": "{{PAYEEFSP_BACKEND_TESTAPI_URL}}/repository/parties",
									"host": [
										"{{PAYEEFSP_BACKEND_TESTAPI_URL}}"
									],
									"path": [
										"repository",
										"parties"
									]
								},
								"description": "Create a party in payeefsp. So that GET /parties can be successful."
							},
							"response": [
								{
									"name": "An error occured processing the request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/repository/parties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"repository",
												"parties"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The party was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/repository/parties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"repository",
												"parties"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "wso2_oauth_tokens",
			"item": [
				{
					"name": "payerfsp token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05e6e3e5-b67b-4709-a2b3-78e1cdecbb6d",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"BEARER_TOKEN\", pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{PAYERFSP_CONSUMER_SECRET}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{PAYERFSP_CONSUMER_KEY}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST_SWITCH}}/token",
							"host": [
								"{{HOST_SWITCH}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "payeefsp token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05e6e3e5-b67b-4709-a2b3-78e1cdecbb6d",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"BEARER_TOKEN\", pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{PAYEEFSP_CONSUMER_SECRET}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{PAYEEFSP_CONSUMER_KEY}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{HOST_SWITCH}}/token",
							"host": [
								"{{HOST_SWITCH}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "hub_operator token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05e6e3e5-b67b-4709-a2b3-78e1cdecbb6d",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"HUB_OPERATOR_BEARER_TOKEN\", pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HUB_OPERATOR_CONSUMER_SECRET}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HUB_OPERATOR_CONSUMER_KEY}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST_SWITCH}}/token",
							"host": [
								"{{HOST_SWITCH}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "noresponsepayeefsp token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05e6e3e5-b67b-4709-a2b3-78e1cdecbb6d",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"NORESPONSEPAYEEFSP_BEARER_TOKEN\", pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{NORESPONSEPAYEEFSP_CONSUMER_KEY}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{NORESPONSEPAYEEFSP_CONSUMER_SECRET}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST_SWITCH}}/token",
							"host": [
								"{{HOST_SWITCH}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "testfsp1 token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05e6e3e5-b67b-4709-a2b3-78e1cdecbb6d",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"TESTFSP1_BEARER_TOKEN\", pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{TESTFSP1_CONSUMER_SECRET}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{TESTFSP1_CONSUMER_KEY}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST_SWITCH}}/token",
							"host": [
								"{{HOST_SWITCH}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "testfsp2 token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05e6e3e5-b67b-4709-a2b3-78e1cdecbb6d",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"TESTFSP2_BEARER_TOKEN\", pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{TESTFSP2_CONSUMER_SECRET}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{TESTFSP2_CONSUMER_KEY}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST_SWITCH}}/token",
							"host": [
								"{{HOST_SWITCH}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "testfsp3 token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05e6e3e5-b67b-4709-a2b3-78e1cdecbb6d",
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});pm.environment.set(\"TESTFSP3_BEARER_TOKEN\", pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{TESTFSP3_CONSUMER_SECRET}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{TESTFSP3_CONSUMER_KEY}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST_SWITCH}}/token",
							"host": [
								"{{HOST_SWITCH}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "testfsp4 token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05e6e3e5-b67b-4709-a2b3-78e1cdecbb6d",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});pm.environment.set(\"TESTFSP4_BEARER_TOKEN\", pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{TESTFSP4_CONSUMER_SECRET}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{TESTFSP4_CONSUMER_KEY}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST_SWITCH}}/token",
							"host": [
								"{{HOST_SWITCH}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "simdfsp1 token ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05e6e3e5-b67b-4709-a2b3-78e1cdecbb6d",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"TESTFSP1_BEARER_TOKEN\", pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{SIMDFSP1_CONSUMER_SECRET}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{SIMDFSP1_CONSUMER_KEY}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST_SWITCH}}/token",
							"host": [
								"{{HOST_SWITCH}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "simdfsp2 token ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05e6e3e5-b67b-4709-a2b3-78e1cdecbb6d",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"TESTFSP2_BEARER_TOKEN\", pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{SIMDFSP2_CONSUMER_SECRET}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{SIMDFSP2_CONSUMER_KEY}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							],
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{HOST_SWITCH}}/token",
							"host": [
								"{{HOST_SWITCH}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "09a3f726-3c88-4aaf-b38a-1ab9c8dd7101",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "33bf5714-8f18-4408-9314-956a9b2a75f7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}