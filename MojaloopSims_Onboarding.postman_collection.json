{
	"info": {
		"_postman_id": "4b758439-c2bd-42e8-b16d-9f2efd922d6d",
		"name": "MojaloopSims_Onboarding",
		"description": "Author: Sridevi Miriyala\nPurpose: Used to add new FSP and relevant Callback Information. \nIn this collection we onboarded HUB accounts for the corresponding currency, payerfsp, payeefsp, testfsp1, testfsp2 sims.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "FSP Onboarding",
			"item": [
				{
					"name": "payerfsp",
					"item": [
						{
							"name": "account",
							"item": [
								{
									"name": "Add payerfsp",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ce2b6b05-5570-492d-af9f-0a49ef3d74a2",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"name\": \"payerfsp\",\"currency\": \"{{currency}}\"}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add initial position and limits - payerfsp",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d9488b8-9a0a-47a6-a16b-c03fade6c9a6",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/{{payerfsp}}/initialPositionAndLimits",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"{{payerfsp}}",
												"initialPositionAndLimits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deposit Funds in Settlement Account - Payerfsp",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d09e63a1-d4ce-405c-9c8c-352066d61fa8",
												"exec": [
													"var uuid = require('uuid');",
													"var generatedUUID = uuid.v4();",
													"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
													"pm.environment.set('fundsInPrepareAmount', 5000);",
													"",
													"",
													"const hubGetStatusRequest = {",
													"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/payerfsp/accounts',",
													"  method: 'GET',",
													"  header: {",
													"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"      \"Content-Type\": \"application/json\"",
													"  }",
													"};",
													"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"    console.log(response.json())",
													"    var jsonData = response.json()",
													"    for(var i in jsonData) {",
													"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"            pm.environment.set(\"payerfspSettlementAccountId\",jsonData[i].id)",
													"        }",
													"    }",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2cbca770-9c40-458c-b7dc-0b0052000e5b",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"setTimeout(function () {",
													"    const payerfspGetStatusRequest = {",
													"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/'+pm.environment.get(\"payerfsp\")+'/accounts',",
													"      method: 'GET',",
													"      header: {",
													"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"          \"Content-Type\": \"application/json\"",
													"      }",
													"    };",
													"    pm.sendRequest(payerfspGetStatusRequest, function (err, response) {",
													"        console.log(response.json())",
													"        var jsonData = response.json()",
													"        var payerfspSettlementAccountBalanceAfterFundsIn",
													"        for(var i in jsonData) {",
													"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"                payerfspSettlementAccountBalanceAfterFundsIn = jsonData[i].value",
													"            }",
													"        }",
													"        var payerfspExpectedBalance = pm.environment.get('payerfspSettlementAccountBalanceBeforeFundsIn') + pm.environment.get('fundsInPrepareAmount')",
													"        pm.test(\"Final Payerfsp Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
													"            pm.expect(payerfspSettlementAccountBalanceAfterFundsIn).to.eql(payerfspExpectedBalance);",
													"          });    ",
													"    ",
													"    });",
													"    ",
													"    const hubGetStatusRequest = {",
													"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/Hub/accounts',",
													"      method: 'GET',",
													"      header: {",
													"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"          \"Content-Type\": \"application/json\"",
													"      }",
													"    };",
													"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"        console.log(response.json())",
													"        var jsonData = response.json()",
													"        var currentHubReconAccountBalance",
													"        for(var i in jsonData) {",
													"            if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
													"                hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
													"            }",
													"        }",
													"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")",
													"        console.log(hubExpectedBalance)",
													"        pm.test(\"Final Hub Reconciliation Account Balance should be same as before FundsIn\", function () {",
													"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
													"          });  ",
													"    });",
													"}, 2000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/{{payerfsp}}/accounts/{{payerfspSettlementAccountId}}",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"{{payerfsp}}",
												"accounts",
												"{{payerfspSettlementAccountId}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": " callbacks",
							"item": [
								{
									"name": "Add payerfsp callback - AUTHORIZATIONS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b2193d1-55ca-4ca7-acc9-560a9ad6c166",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_AUTHORIZATIONS\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTICIPANT PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "99ea8a1c-4198-42e9-979e-8552c32271ce",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTICIPANT PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0919d55b-880c-462c-a628-e2fb3e701f94",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTICIPANT PUT Batch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8cc158c5-01c1-4b29-af27-c919a782e00e",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/participants/{{requestId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTICIPANT PUT Batch Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2f7c2a8-8599-4293-9ceb-2490290cd7ee",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/participants/{{requestId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTIES GET",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ceeb1799-2962-4264-bcc3-f6aa0941b50e",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTIES PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "147a6b8e-700a-47ce-9337-f71e0ec020aa",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - PARTIES PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e372911b-5493-4fc5-9fdd-1a027172c8a7",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - QUOTES",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94320470-a74d-4b4a-8b5f-b618d47e09d6",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - TXN REQUEST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c70ecbf-3a2f-4068-901c-fc2e4b07d00e",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "43dce607-ef62-45f4-86f4-e858062ca241",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/transfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1bf90ea1-b28b-4fc0-932e-a7cb4a39e040",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4b05c0b6-6db4-44cb-8016-8bd6516406c2",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - BULK-TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d9dc7206-b51f-4e24-a954-a1954ae2a6f4",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_POST\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/bulkTransfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - BULK-TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44b8cf2c-da0e-471b-b2f8-81bd199ba81f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_PUT\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/bulkTransfers/{{id}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payerfsp callback - BULK-TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "56c4b73b-a1a7-4356-8751-21e9ab698b24",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_ERROR\",\n  \"value\": \"{{PAYERFSP_CALLBACK_URL}}/bulkTransfers/{{id}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "notification_emails",
							"item": [
								{
									"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"{{PAYERFSP_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"{{PAYERFSP_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"{{PAYERFSP_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "oracle_registration",
							"item": [
								{
									"name": "Add {{payerfspMSISDN}} in MSISDN Oracle",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.interoperability.participants+json;version=1"
											},
											{
												"key": "Connection",
												"value": "keep-alive"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.interoperability.participants+json;version=1.0"
											},
											{
												"key": "Date",
												"value": ""
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator"
											},
											{
												"key": "Postman-Token",
												"value": "7aa4c9f3-1738-49f0-8904-7821e2336692,4127ff87-7d17-483c-8e3e-f0b562a16d84"
											},
											{
												"key": "User-Agent",
												"value": "PostmanRuntime/7.11.0"
											},
											{
												"key": "accept-encoding",
												"value": "gzip, deflate"
											},
											{
												"key": "cache-control",
												"value": "no-cache"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fspId\": \"payeefsp\",\n    \"currency\": \"{{currency}}\"\n}"
										},
										"url": {
											"raw": "{{MSISDN_ORACLE_ENDPOINT}}/participants/MSISDN/{{payerfspMSISDN}}",
											"host": [
												"{{MSISDN_ORACLE_ENDPOINT}}"
											],
											"path": [
												"participants",
												"MSISDN",
												"{{payerfspMSISDN}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "add_users",
							"item": [
								{
									"name": "Add {{payerfspMSISDN}} to payerfsp",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d179ad8a-c884-45cd-b41b-753fee620593",
												"exec": [
													"pm.environment.set('fullName', 'SimFirst SimLast');",
													"pm.environment.set('firstName', 'SimFirst');",
													"pm.environment.set('middleName', 'SimMiddle');",
													"pm.environment.set('lastName', 'SimLast');",
													"pm.environment.set('dob', '2010-10-10');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c232cc15-f7bb-49bf-9622-bcd5f726b3c0",
												"exec": [
													"pm.test(\"Successful POST request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([204,200, 500]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"{{fullName}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"middleName\": \"{{middleName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"dateOfBirth\": \"{{dob}}\",\n    \"idType\": \"MSISDN\",\n    \"idValue\": \"{{payerfspMSISDN}}\"\n}"
										},
										"url": {
											"raw": "{{PAYERFSP_BACKEND_TESTAPI_URL}}/repository/parties",
											"host": [
												"{{PAYERFSP_BACKEND_TESTAPI_URL}}"
											],
											"path": [
												"repository",
												"parties"
											]
										},
										"description": "Create a party in payeefsp. So that GET /parties can be successful."
									},
									"response": [
										{
											"name": "The party was created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/repository/parties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"repository",
														"parties"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An error occured processing the request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/repository/parties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"repository",
														"parties"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add SubId User - 27713803920 - 100",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f2ebfae7-8862-44af-b24d-4375be99118f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "94da480f-38e6-4cc8-ae0e-a8a7b329b729",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.interoperability.participants+json;version=1.0"
											},
											{
												"key": "Accept",
												"value": "application/vnd.interoperability.participants+json;version=1",
												"type": "text"
											},
											{
												"key": "Date",
												"value": "{{transferDate}}",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{payerfsp}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"fspId\": \"{{payerfsp}}\",\n \"currency\": \"USD\"\n}\n"
										},
										"url": {
											"raw": "{{HOST_ACCOUNT_LOOKUP_SERVICE}}/participants/MSISDN/27713803920/100",
											"host": [
												"{{HOST_ACCOUNT_LOOKUP_SERVICE}}"
											],
											"path": [
												"participants",
												"MSISDN",
												"27713803920",
												"100"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "payeefsp",
					"item": [
						{
							"name": "accounts",
							"item": [
								{
									"name": "Add payeefsp",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "58459741-3a90-414f-9d87-6e07a0b8c177",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"name\": \"payeefsp\",\"currency\": \"{{currency}}\"}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add initial position and limits - payeefsp",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d75d1b7f-075e-4302-a32d-7280de45d738",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/initialPositionAndLimits",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"initialPositionAndLimits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deposit Funds - Payeefsp",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7eda4168-209c-4c59-b395-1958bfa9ff74",
												"exec": [
													"var uuid = require('uuid');",
													"var generatedUUID = uuid.v4();",
													"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
													"pm.environment.set('fundsInPrepareAmount', 5000);",
													"",
													"",
													"const hubGetStatusRequest = {",
													"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/payeefsp/accounts',",
													"  method: 'GET',",
													"  header: {",
													"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"      \"Content-Type\": \"application/json\"",
													"  }",
													"};",
													"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"    console.log(response.json())",
													"    var jsonData = response.json()",
													"    for(var i in jsonData) {",
													"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"            pm.environment.set(\"payeefspSettlementAccountId\",jsonData[i].id)",
													"        }",
													"    }",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ddb235e8-be79-4599-b8b7-288aa05c1bd5",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"setTimeout(function () {",
													"    const payeefspGetStatusRequest = {",
													"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/'+pm.environment.get(\"payeefsp\")+'/accounts',",
													"      method: 'GET',",
													"      header: {",
													"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"          \"Content-Type\": \"application/json\"",
													"      }",
													"    };",
													"    pm.sendRequest(payeefspGetStatusRequest, function (err, response) {",
													"        console.log(response.json())",
													"        var jsonData = response.json()",
													"        var payeefspSettlementAccountBalanceAfterFundsIn",
													"        for(var i in jsonData) {",
													"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"                payeefspSettlementAccountBalanceAfterFundsIn = jsonData[i].value",
													"            }",
													"        }",
													"        var payeefspExpectedBalance = pm.environment.get('payeefspSettlementAccountBalanceBeforeFundsIn') + pm.environment.get('fundsInPrepareAmount')",
													"        pm.test(\"Final Payeefsp Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
													"            pm.expect(payeefspSettlementAccountBalanceAfterFundsIn).to.eql(payeefspExpectedBalance);",
													"          });    ",
													"    ",
													"    });",
													"    ",
													"    const hubGetStatusRequest = {",
													"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/Hub/accounts',",
													"      method: 'GET',",
													"      header: {",
													"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"          \"Content-Type\": \"application/json\"",
													"      }",
													"    };",
													"    pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"        console.log(response.json())",
													"        var jsonData = response.json()",
													"        var currentHubReconAccountBalance",
													"        for(var i in jsonData) {",
													"            if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
													"                hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
													"            }",
													"        }",
													"        var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")",
													"        console.log(hubExpectedBalance)",
													"        pm.test(\"Final Hub Reconciliation Account Balance should be same as before FundsIn\", function () {",
													"            pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
													"          });  ",
													"    });",
													"}, 2000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/{{payeefsp}}/accounts/{{payeefspSettlementAccountId}}",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"{{payeefsp}}",
												"accounts",
												"{{payeefspSettlementAccountId}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "##Author: Sridevi Miriyala##",
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "callbacks",
							"item": [
								{
									"name": "Add payeefsp callback - AUTHORIZATIONS",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2e4f312b-a936-470b-9dba-39a795f66691",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_AUTHORIZATIONS\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "05871def-9429-408b-a43d-caa7e6d1c962",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7a957790-fb9b-4c02-bbe3-fc19d1571326",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT Batch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbcc4191-dc0b-4925-b721-7689cd945662",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/participants/{{requestId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTICIPANT PUT Batch Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "648c6af4-9167-4bf0-baab-452b0b535bef",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/participants/{{requestId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTIES GET",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f2d8d1ff-87c3-4431-97da-8d8439804dd2",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTIES PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f2a05654-4f96-4949-9dad-8022b110e3cf",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - PARTIES PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2b0edd7b-a837-4de7-98c9-9c135b634a79",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - QUOTES",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7e5c97c7-28fd-496e-b42f-8ab8fbb42cbb",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TXN REQUEST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "965d96e9-3c67-419e-8896-058c9162dd7c",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a28dca9c-e5cc-4ba5-bdd1-d68c9ff57d48",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/transfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b039195-98cd-4973-95f7-2ca25b87c33d",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{payerfsp}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f1093a5-52ef-48ec-b254-97ffcce8a69f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - BULK-TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f1c07a61-15cf-4f68-ac92-d4018834eb82",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_POST\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/bulkTransfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - BULK-TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4577b533-1c9d-45a3-99af-065b4bd02198",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{payerfsp}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_PUT\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/bulkTransfers/{{id}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add payeefsp callback - BULK-TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cf197f5b-76c0-4264-8c79-19d64e5cbd5f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_ERROR\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/bulkTransfers/{{id}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "notification_emails",
							"item": [
								{
									"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"{{PAYEEFSP_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"{{PAYEEFSP_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"{{PAYEEFSP_EMAIL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payeefsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "oracle_registration",
							"item": [
								{
									"name": "Add {{payeefspMSISDN}} in MSISDN Oracle",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.interoperability.participants+json;version=1"
											},
											{
												"key": "Connection",
												"value": "keep-alive"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.interoperability.participants+json;version=1.0"
											},
											{
												"key": "Date",
												"value": ""
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator"
											},
											{
												"key": "Postman-Token",
												"value": "7aa4c9f3-1738-49f0-8904-7821e2336692,4127ff87-7d17-483c-8e3e-f0b562a16d84"
											},
											{
												"key": "User-Agent",
												"value": "PostmanRuntime/7.11.0"
											},
											{
												"key": "accept-encoding",
												"value": "gzip, deflate"
											},
											{
												"key": "cache-control",
												"value": "no-cache"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fspId\": \"payeefsp\",\n    \"currency\": \"{{currency}}\"\n}"
										},
										"url": {
											"raw": "{{MSISDN_ORACLE_ENDPOINT}}/participants/MSISDN/{{payeefspMSISDN}}",
											"host": [
												"{{MSISDN_ORACLE_ENDPOINT}}"
											],
											"path": [
												"participants",
												"MSISDN",
												"{{payeefspMSISDN}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "add_users",
							"item": [
								{
									"name": "Add {{payeefspMSISDN}} to payeefsp",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fb4082c6-86c8-43b4-bd5c-fbc63c90c953",
												"exec": [
													"pm.environment.set('fullName', 'PayeeFirst PayeeLast');",
													"pm.environment.set('firstName', 'PayeeFirst');",
													"pm.environment.set('middleName', 'PayeeMiddle');",
													"pm.environment.set('lastName', 'PayeeLast');",
													"pm.environment.set('dob', '2010-10-10');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "55ed3abb-244c-4225-8146-bdc9df3b1063",
												"exec": [
													"pm.test(\"Successful POST request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([204,200, 500]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"{{fullName}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"middleName\": \"{{middleName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"dateOfBirth\": \"{{dob}}\",\n    \"idType\": \"MSISDN\",\n    \"idValue\": \"{{payeefspMSISDN}}\"\n}"
										},
										"url": {
											"raw": "{{PAYEEFSP_BACKEND_TESTAPI_URL}}/repository/parties",
											"host": [
												"{{PAYEEFSP_BACKEND_TESTAPI_URL}}"
											],
											"path": [
												"repository",
												"parties"
											]
										},
										"description": "Create a party in payeefsp. So that GET /parties can be successful."
									},
									"response": [
										{
											"name": "An error occured processing the request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/repository/parties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"repository",
														"parties"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The party was created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/repository/parties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"repository",
														"parties"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Register {{merchantId}} in BUSINESS Oracle",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.interoperability.participants+json;version=1"
											},
											{
												"key": "Connection",
												"value": "keep-alive"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.interoperability.participants+json;version=1.0"
											},
											{
												"key": "Date",
												"value": ""
											},
											{
												"key": "FSPIOP-Source",
												"value": "payeefsp"
											},
											{
												"key": "Postman-Token",
												"value": "7aa4c9f3-1738-49f0-8904-7821e2336692,4127ff87-7d17-483c-8e3e-f0b562a16d84"
											},
											{
												"key": "User-Agent",
												"value": "PostmanRuntime/7.11.0"
											},
											{
												"key": "accept-encoding",
												"value": "gzip, deflate"
											},
											{
												"key": "cache-control",
												"value": "no-cache"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fspId\": \"payeefsp\",\n    \"currency\": \"{{currency}}\"\n}"
										},
										"url": {
											"raw": "{{MERCHANT_ORACLE_ENDPOINT}}/participants/BUSINESS/{{merchantId}}",
											"host": [
												"{{MERCHANT_ORACLE_ENDPOINT}}"
											],
											"path": [
												"participants",
												"BUSINESS",
												"{{merchantId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register {{aliasId}} in ALIAS Oracle",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.interoperability.participants+json;version=1"
											},
											{
												"key": "Connection",
												"value": "keep-alive"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.interoperability.participants+json;version=1.0"
											},
											{
												"key": "Date",
												"value": ""
											},
											{
												"key": "FSPIOP-Source",
												"value": "payeefsp"
											},
											{
												"key": "Postman-Token",
												"value": "7aa4c9f3-1738-49f0-8904-7821e2336692,4127ff87-7d17-483c-8e3e-f0b562a16d84"
											},
											{
												"key": "User-Agent",
												"value": "PostmanRuntime/7.11.0"
											},
											{
												"key": "accept-encoding",
												"value": "gzip, deflate"
											},
											{
												"key": "cache-control",
												"value": "no-cache"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fspId\": \"payeefsp\",\n    \"currency\": \"{{currency}}\"\n}"
										},
										"url": {
											"raw": "{{ALIAS_ORACLE_ENDPOINT}}/participants/ALIAS/{{aliasID}}",
											"host": [
												"{{ALIAS_ORACLE_ENDPOINT}}"
											],
											"path": [
												"participants",
												"ALIAS",
												"{{aliasID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add SubId User - 27713803921 - 200",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7bf68e45-544c-4b08-9426-fac396c09d4c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a611208f-56e9-4927-bad5-f768fb68dd27",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/vnd.interoperability.participants+json;version=1.0"
											},
											{
												"key": "Accept",
												"value": "application/vnd.interoperability.participants+json;version=1",
												"type": "text"
											},
											{
												"key": "Date",
												"value": "{{transferDate}}",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{payeefsp}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"fspId\": \"{{payeefsp}}\",\n \"currency\": \"USD\"\n}\n"
										},
										"url": {
											"raw": "{{HOST_ACCOUNT_LOOKUP_SERVICE}}/participants/MSISDN/27713803921/200",
											"host": [
												"{{HOST_ACCOUNT_LOOKUP_SERVICE}}"
											],
											"path": [
												"participants",
												"MSISDN",
												"27713803921",
												"200"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "noresponsepayeefsp",
					"item": [
						{
							"name": "accounts",
							"item": [
								{
									"name": "Add noresponsepayeefsp",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3d3a1d47-1aaa-4ceb-8877-89f703c3a71f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"name\": \"noresponsepayeefsp\",\"currency\": \"{{currency}}\"}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add initial position and limits",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83396c87-7789-4485-be35-e1bcdbf12ce6",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/noresponsepayeefsp/initialPositionAndLimits",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"noresponsepayeefsp",
												"initialPositionAndLimits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deposit Funds in Settlement Account - Payerfsp",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a1068e85-0246-4b0f-96a2-bd459f4223b9",
												"exec": [
													"var uuid = require('uuid');",
													"var generatedUUID = uuid.v4();",
													"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
													"pm.environment.set('fundsInPrepareAmount', 5000000);",
													"",
													"",
													"const hubGetStatusRequest = {",
													"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/noresponsepayeefsp/accounts',",
													"  method: 'GET',",
													"  header: {",
													"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"      \"Content-Type\": \"application/json\"",
													"  }",
													"};",
													"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"    console.log(response.json())",
													"    var jsonData = response.json()",
													"    for(var i in jsonData) {",
													"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"            pm.environment.set(\"noresponsepayeefspSettlementAccountId\",jsonData[i].id)",
													"        }",
													"    }",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1c76fa93-dc12-4a5d-bd1b-1921043f1713",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"setTimeout(function () {",
													"    const noresponsepayeefspGetStatusRequest = {",
													"      url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/noresponsepayeefsp/accounts',",
													"      method: 'GET',",
													"      header: {",
													"          \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"          \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"          \"Content-Type\": \"application/json\"",
													"      }",
													"    };",
													"    pm.sendRequest(noresponsepayeefspGetStatusRequest, function (err, response) {",
													"        console.log(response.json())",
													"        var jsonData = response.json()",
													"        var noresponsepayeefspSettlementAccountBalanceAfterFundsIn",
													"        for(var i in jsonData) {",
													"            if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"                noresponsepayeefspSettlementAccountBalanceAfterFundsIn = jsonData[i].value",
													"            }",
													"        }",
													"    });",
													"}, 2000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/noresponsepayeefsp/accounts/{{noresponsepayeefspSettlementAccountId}}",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"noresponsepayeefsp",
												"accounts",
												"{{noresponsepayeefspSettlementAccountId}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "callbacks",
							"item": [
								{
									"name": "Add noresponsepayeefsp callback - TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d624c0d8-1193-462f-9a5a-f0e55e1d48ca",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/noresponsepayeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"noresponsepayeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add noresponsepayeefsp callback - TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "93a6d0b6-3d68-4259-9f79-74c09dd4725b",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{PAYEEFSP_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/noresponsepayeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"noresponsepayeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add noresponsepayeefsp callback - BULK-TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5b2ad543-f242-4942-b0ff-255b2febe887",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_POST\",\n  \"value\": \"{{HOST_LEGACY_SIMULATOR}}/bulkTransfersNegative\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/noresponsepayeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"noresponsepayeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add noresponsepayeefsp callback - BULK-TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a3708ad7-d3cc-46dc-be0a-31c38d636352",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3ea43f8c-86c5-428d-9940-e478166bb6a2",
												"exec": [
													"pm.environment.set('bulkTransferId', '{{bulkTransferId}}')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_PUT\",\n  \"value\": \"{{HOST_LEGACY_SIMULATOR}}/bulkTransfersNegative/{{id}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/noresponsepayeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"noresponsepayeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add noresponsepayeefsp callback - BULK-TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09eaa864-b18d-451e-bf50-bab9f7c0e8d6",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "96c23a1e-94c3-40ad-a811-a39d7a4b0d63",
												"exec": [
													"pm.environment.set('id', '{{id}}')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_BULK_TRANSFER_ERROR\",\n  \"value\": \"{{HOST_LEGACY_SIMULATOR}}/bulkTransfersNegative/{{id}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/noresponsepayeefsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"noresponsepayeefsp",
												"endpoints"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "notification_emails",
							"item": [
								{
									"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "payerfsp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/payerfsp/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"payerfsp",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "testfsp1",
					"item": [
						{
							"name": "accounts",
							"item": [
								{
									"name": "Add testfsp1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f0f32ac1-e794-4816-b67c-eef5d51c5ccc",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"name\": \"testfsp1\",\"currency\": \"{{currency}}\"}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add initial position and limits - testfsp1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "03ee3962-d044-4776-92b2-efc2eaff4708",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/initialPositionAndLimits",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"initialPositionAndLimits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deposit Funds - testfsp1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a5b9a4cb-2c97-4de5-8966-447679bc1196",
												"exec": [
													"var uuid = require('uuid');",
													"var generatedUUID = uuid.v4();",
													"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
													"pm.environment.set('fundsInPrepareAmount', 5000);",
													"",
													"",
													"const hubGetStatusRequest = {",
													"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/testfsp1/accounts',",
													"  method: 'GET',",
													"  header: {",
													"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"      \"Content-Type\": \"application/json\"",
													"  }",
													"};",
													"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"    console.log(response.json())",
													"    var jsonData = response.json()",
													"    for(var i in jsonData) {",
													"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"            pm.environment.set(\"testfsp1SettlementAccountId\",jsonData[i].id)",
													"        }",
													"    }",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "aa5c8169-6f08-4b26-8a14-0bd83038bc34",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"// setTimeout(function () {",
													"//     const testfsp1GetStatusRequest = {",
													"//       url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/'+pm.environment.get(\"testfsp1\")+'/accounts',",
													"//       method: 'GET',",
													"//       header: {",
													"//           \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"//           \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"//           \"Content-Type\": \"application/json\"",
													"//       }",
													"//     };",
													"//     pm.sendRequest(testfsp1GetStatusRequest, function (err, response) {",
													"//         console.log(response.json())",
													"//         var jsonData = response.json()",
													"//         var testfsp1SettlementAccountBalanceAfterFundsIn",
													"//         for(var i in jsonData) {",
													"//             if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"//                 testfsp1SettlementAccountBalanceAfterFundsIn = jsonData[i].value",
													"//             }",
													"//         }",
													"//         var testfsp1ExpectedBalance = pm.environment.get('testfsp1SettlementAccountBalanceBeforeFundsIn') + pm.environment.get('fundsInPrepareAmount')",
													"//         pm.test(\"Final testfsp1 Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
													"//             pm.expect(testfsp1SettlementAccountBalanceAfterFundsIn).to.eql(testfsp1ExpectedBalance);",
													"//           });    ",
													"    ",
													"//     });",
													"    ",
													"//     const hubGetStatusRequest = {",
													"//       url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/Hub/accounts',",
													"//       method: 'GET',",
													"//       header: {",
													"//           \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"//           \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"//           \"Content-Type\": \"application/json\"",
													"//       }",
													"//     };",
													"//     pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"//         console.log(response.json())",
													"//         var jsonData = response.json()",
													"//         var currentHubReconAccountBalance",
													"//         for(var i in jsonData) {",
													"//             if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
													"//                 hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
													"//             }",
													"//         }",
													"//         var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")",
													"//         console.log(hubExpectedBalance)",
													"//         pm.test(\"Final Hub Reconciliation Account Balance should be same as before FundsIn\", function () {",
													"//             pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
													"//           });  ",
													"//     });",
													"// }, 2000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/accounts/{{testfsp1SettlementAccountId}}",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"accounts",
												"{{testfsp1SettlementAccountId}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "callbacks",
							"item": [
								{
									"name": "Add testfsp1 callback - PARTIES GET",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "33a13ae1-b6b7-4589-9de1-96b75fd231dd",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp1 callback - PARTIES PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a7a2b8d6-d1df-45d3-8704-228a4c8f8f9b",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp1 callback - PARTIES PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f04dde12-c04a-45dc-92f4-17949f818f38",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp1 callback - PARTICIPANT PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "51bcf03b-7eba-497a-a94b-7d7b891cec9b",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp1 callback - PARTICIPANT PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c0e4962d-541a-4516-a958-b33b086314bf",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp1 callback - PARTICIPANT PUT Batch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "45580c29-4907-4575-9c55-fd65ef7e2191",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/participants/{{requestId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp1 callback - PARTICIPANT PUT Batch Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4612b729-e8c8-4f89-bab0-1c7d188c5435",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/participants/{{requestId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp1 callback - QUOTES",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "41515df4-c951-47d1-9c8c-eb893ba316ad",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp1 callback - TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "04c88a71-c7cb-4ea4-842b-afd38d137e99",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/transfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp1 callback - TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f675e7a-285a-4f0e-ae59-37a9faa6633b",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp1 callback - TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73508afb-2eb7-46fe-9833-a7e659cc5878",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{TESTFSP1_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "notification_emails",
							"item": [
								{
									"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp1/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp1",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "oracle_registration",
							"item": [
								{
									"name": "Add testfsp1 in MSISDN Oracle",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.interoperability.participants+json;version=1"
											},
											{
												"key": "Connection",
												"value": "keep-alive"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.interoperability.participants+json;version=1.0"
											},
											{
												"key": "Date",
												"value": ""
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator"
											},
											{
												"key": "Postman-Token",
												"value": "7aa4c9f3-1738-49f0-8904-7821e2336692,4127ff87-7d17-483c-8e3e-f0b562a16d84"
											},
											{
												"key": "User-Agent",
												"value": "PostmanRuntime/7.11.0"
											},
											{
												"key": "accept-encoding",
												"value": "gzip, deflate"
											},
											{
												"key": "cache-control",
												"value": "no-cache"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fspId\": \"testfsp1\",\n    \"currency\": \"{{currency}}\"\n}"
										},
										"url": {
											"raw": "{{MSISDN_ORACLE_ENDPOINT}}/participants/MSISDN/{{testfsp1MSISDN}}",
											"host": [
												"{{MSISDN_ORACLE_ENDPOINT}}"
											],
											"path": [
												"participants",
												"MSISDN",
												"{{testfsp1MSISDN}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "add_users",
							"item": [
								{
									"name": "Add {{testfsp1MSISDN}} to testfsp1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4292fc11-a873-4b96-b2ce-1fb2938ecf88",
												"exec": [
													"pm.environment.set('fullName', 'Testfsp1First Testfsp1Last');",
													"pm.environment.set('firstName', 'Testfsp1First');",
													"pm.environment.set('middleName', 'Testfsp1Middle');",
													"pm.environment.set('lastName', 'Testfsp1Last');",
													"pm.environment.set('dob', '2010-10-10');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "035be8ea-46ab-4aba-9999-b1b4a0311deb",
												"exec": [
													"pm.test(\"Successful POST request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([204,200, 500]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"{{fullName}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"middleName\": \"{{middleName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"dateOfBirth\": \"{{dob}}\",\n    \"idType\": \"MSISDN\",\n    \"idValue\": \"{{testfsp1MSISDN}}\"\n}"
										},
										"url": {
											"raw": "{{PAYEEFSP_BACKEND_TESTAPI_URL}}/repository/parties",
											"host": [
												"{{PAYEEFSP_BACKEND_TESTAPI_URL}}"
											],
											"path": [
												"repository",
												"parties"
											]
										},
										"description": "Create a party in payeefsp. So that GET /parties can be successful."
									},
									"response": [
										{
											"name": "An error occured processing the request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/repository/parties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"repository",
														"parties"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The party was created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/repository/parties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"repository",
														"parties"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "testfsp2",
					"item": [
						{
							"name": "accounts",
							"item": [
								{
									"name": "Add testfsp2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bcda36c1-163d-4f84-9714-bf052c878f91",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"name\": \"testfsp2\",\"currency\": \"{{currency}}\"}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add initial position and limits - testfsp2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "214cb5ac-d9e3-4433-96ad-a6c9910a570c",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"currency\": \"{{currency}}\",\n\t\"limit\": {\n\t  \"type\": \"NET_DEBIT_CAP\",\n\t  \"value\": 10000\n\t},\n\t\"initialPosition\": 0\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/initialPositionAndLimits",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"initialPositionAndLimits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deposit Funds - testfsp2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "adad95f3-76f1-496b-bc7c-a28da0e6276e",
												"exec": [
													"var uuid = require('uuid');",
													"var generatedUUID = uuid.v4();",
													"pm.environment.set('fundsInPrepareTransferId', generatedUUID);",
													"pm.environment.set('fundsInPrepareAmount', 5000);",
													"",
													"",
													"const hubGetStatusRequest = {",
													"  url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/testfsp2/accounts',",
													"  method: 'GET',",
													"  header: {",
													"      \"Authorization\":\"Bearer \"+pm.environment.get(\"HUB_OPERATOR_BEARER_TOKEN\"),",
													"      \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"      \"Content-Type\": \"application/json\"",
													"  }",
													"};",
													"pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"    console.log(response.json())",
													"    var jsonData = response.json()",
													"    for(var i in jsonData) {",
													"        if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"            pm.environment.set(\"testfsp2SettlementAccountId\",jsonData[i].id)",
													"        }",
													"    }",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "84f1e2c3-3d30-4cb1-9ebe-9e2b8c596ff0",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"// setTimeout(function () {",
													"//     const testfsp2GetStatusRequest = {",
													"//       url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/'+pm.environment.get(\"testfsp2\")+'/accounts',",
													"//       method: 'GET',",
													"//       header: {",
													"//           \"Authorization\":\"Bearer \"+pm.environment.get(\"HUBOPERATOR_BEARER_TOKEN\"),",
													"//           \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"//           \"Content-Type\": \"application/json\"",
													"//       }",
													"//     };",
													"//     pm.sendRequest(testfsp2GetStatusRequest, function (err, response) {",
													"//         console.log(response.json())",
													"//         var jsonData = response.json()",
													"//         var testfsp2SettlementAccountBalanceAfterFundsIn",
													"//         for(var i in jsonData) {",
													"//             if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
													"//                 testfsp2SettlementAccountBalanceAfterFundsIn = jsonData[i].value",
													"//             }",
													"//         }",
													"//         var testfsp2ExpectedBalance = pm.environment.get('testfsp2SettlementAccountBalanceBeforeFundsIn') + pm.environment.get('fundsInPrepareAmount')",
													"//         pm.test(\"Final testfsp2 Settlement Account Balance should be same as before FundsIn + fundsInPrepareAmount\", function () {",
													"//             pm.expect(testfsp2SettlementAccountBalanceAfterFundsIn).to.eql(testfsp2ExpectedBalance);",
													"//           });    ",
													"    ",
													"//     });",
													"    ",
													"//     const hubGetStatusRequest = {",
													"//       url: pm.environment.get(\"HOST_CENTRAL_LEDGER\")+pm.environment.get(\"BASE_CENTRAL_LEDGER_ADMIN\")+'/participants/Hub/accounts',",
													"//       method: 'GET',",
													"//       header: {",
													"//           \"Authorization\":\"Bearer \"+pm.environment.get(\"HUBOPERATOR_BEARER_TOKEN\"),",
													"//           \"FSPIOP-Source\": pm.environment.get(\"hub_operator\"),",
													"//           \"Content-Type\": \"application/json\"",
													"//       }",
													"//     };",
													"//     pm.sendRequest(hubGetStatusRequest, function (err, response) {",
													"//         console.log(response.json())",
													"//         var jsonData = response.json()",
													"//         var currentHubReconAccountBalance",
													"//         for(var i in jsonData) {",
													"//             if(jsonData[i].ledgerAccountType === 'HUB_RECONCILIATION') {",
													"//                 hubReconAccountBalanceAfterFundsIn = jsonData[i].value",
													"//             }",
													"//         }",
													"//         var hubExpectedBalance = pm.environment.get(\"hubReconAccountBalanceBeforeFundsIn\")",
													"//         console.log(hubExpectedBalance)",
													"//         pm.test(\"Final Hub Reconciliation Account Balance should be same as before FundsIn\", function () {",
													"//             pm.expect(hubReconAccountBalanceAfterFundsIn).to.eql(hubExpectedBalance);",
													"//           });  ",
													"//     });",
													"// }, 2000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transferId\": \"{{fundsInPrepareTransferId}}\",\n  \"externalReference\": \"string\",\n  \"action\": \"recordFundsIn\",\n  \"reason\": \"string\",\n  \"amount\": {\n    \"amount\": {{fundsInPrepareAmount}},\n    \"currency\": \"{{currency}}\"\n  },\n  \"extensionList\": {\n    \"extension\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/accounts/{{testfsp2SettlementAccountId}}",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"accounts",
												"{{testfsp2SettlementAccountId}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "callbacks",
							"item": [
								{
									"name": "Add testfsp2 callback - PARTIES GET",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8d1b8da-c2b8-40d1-b16f-04dc72686358",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_GET\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp2 callback - PARTIES PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2beb9782-e567-4f63-adcc-383395336663",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp2 callback - PARTIES PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa357ea0-e01c-4cff-9398-4b738605b34c",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/parties/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp2 callback - PARTICIPANT PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "02893815-2f7f-4db7-b7c4-5ecfde16f206",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp2 callback - PARTICIPANT PUT Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "566c621f-df5a-46ec-acfe-bb614835419f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/participants/{{partyIdType}}/{{partyIdentifier}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp2 callback - PARTICIPANT PUT Batch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7d07f576-e154-4656-8ce1-46e1a26e6a54",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/participants/{{requestId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp2 callback - PARTICIPANT PUT Batch Error",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e09afd36-e068-4ec8-b6af-8f55cdcf139a",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/participants/{{requestId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp2 callback - QUOTES",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "327c151e-635e-49bb-824f-cfe26137ca5d",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_QUOTES\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp2 callback - TRANSFER POST",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eda6908d-ac8e-408f-87fa-5db44ca51e20",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_POST\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/transfers\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp2 callback - TRANSFER PUT",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c70392d4-88a6-4d60-9fec-4de7fe3c1419",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_PUT\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/transfers/{{transferId}}\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add testfsp2 callback - TRANSFER ERROR",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3339b76a-a436-4a02-ae02-438ba6678e2f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FSPIOP_CALLBACK_URL_TRANSFER_ERROR\",\n  \"value\": \"{{TESTFSP2_CALLBACK_URL}}/transfers/{{transferId}}/error\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "notification_emails",
							"item": [
								{
									"name": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_ADJUSTMENT_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"value": "{{hub_operator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Cache-Control",
												"value": "no-cache"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "FSPIOP-Source",
												"type": "text",
												"value": "{{hub_operator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\",\n  \"value\": \"sridevi.miriyala@modusbox.com\"\n}"
										},
										"url": {
											"raw": "{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}/participants/testfsp2/endpoints",
											"host": [
												"{{HOST_CENTRAL_LEDGER}}{{BASE_CENTRAL_LEDGER_ADMIN}}"
											],
											"path": [
												"participants",
												"testfsp2",
												"endpoints"
											]
										},
										"description": "Generated from a curl request: \ncurl -i -X POST     http://test-central-ledger.mojaloop.test/admin/participants/testfsp2/initialPositionAndLimits     -H 'Cache-Control: no-cache'     -H 'Content-Type: application/json'     -d '{\n    \\\"currency\\\": \\\"USD\\\",\n    \\\"limit\\\": {\n      \\\"type\\\": \\\"NET_DEBIT_CAP\\\",\n      \\\"value\\\": 1000\n    },\n    \\\"initialPosition\\\": 0\n  }'"
									},
									"response": [
										{
											"name": "2. Create Initial Position and Limits",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Cache-Control",
														"value": "no-cache"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"currency\": \"USD\",\n    \"limit\": {\n      \"type\": \"NET_DEBIT_CAP\",\n      \"value\": 1000\n    },\n    \"initialPosition\": 0\n  }"
												},
												"url": {
													"raw": "http://test-central-ledger.mojaloop.live/admin/participants/testfsp/initialPositionAndLimits",
													"protocol": "http",
													"host": [
														"test-central-ledger",
														"mojaloop",
														"live"
													],
													"path": [
														"admin",
														"participants",
														"testfsp",
														"initialPositionAndLimits"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "oracle_registration",
							"item": [
								{
									"name": "Add testfsp2 in MSISDN Oracle",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{HUB_OPERATOR_BEARER_TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.interoperability.participants+json;version=1"
											},
											{
												"key": "Connection",
												"value": "keep-alive"
											},
											{
												"key": "Content-Type",
												"value": "application/vnd.interoperability.participants+json;version=1.0"
											},
											{
												"key": "Date",
												"value": ""
											},
											{
												"key": "FSPIOP-Source",
												"value": "hub_operator"
											},
											{
												"key": "Postman-Token",
												"value": "7aa4c9f3-1738-49f0-8904-7821e2336692,4127ff87-7d17-483c-8e3e-f0b562a16d84"
											},
											{
												"key": "User-Agent",
												"value": "PostmanRuntime/7.11.0"
											},
											{
												"key": "accept-encoding",
												"value": "gzip, deflate"
											},
											{
												"key": "cache-control",
												"value": "no-cache"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fspId\": \"testfsp2\",\n    \"currency\": \"{{currency}}\"\n}"
										},
										"url": {
											"raw": "{{MSISDN_ORACLE_ENDPOINT}}/participants/MSISDN/{{testfsp2MSISDN}}",
											"host": [
												"{{MSISDN_ORACLE_ENDPOINT}}"
											],
											"path": [
												"participants",
												"MSISDN",
												"{{testfsp2MSISDN}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "add_users",
							"item": [
								{
									"name": "Add {{testfsp2MSISDN}} to testfsp2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "688af083-cace-4e31-afef-937a1f74145b",
												"exec": [
													"pm.environment.set('fullName', 'Testfsp2First Testfsp2Last');",
													"pm.environment.set('firstName', 'Testfsp2First');",
													"pm.environment.set('middleName', 'Testfsp2Middle');",
													"pm.environment.set('lastName', 'Testfsp2Last');",
													"pm.environment.set('dob', '2010-10-10');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "fcb3f8bb-69d9-47ec-acb3-57ca4c47c291",
												"exec": [
													"pm.test(\"Successful POST request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([204,200, 500]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"{{fullName}}\",\n    \"firstName\": \"{{firstName}}\",\n    \"middleName\": \"{{middleName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"dateOfBirth\": \"{{dob}}\",\n    \"idType\": \"MSISDN\",\n    \"idValue\": \"{{testfsp2MSISDN}}\"\n}"
										},
										"url": {
											"raw": "{{PAYEEFSP_BACKEND_TESTAPI_URL}}/repository/parties",
											"host": [
												"{{PAYEEFSP_BACKEND_TESTAPI_URL}}"
											],
											"path": [
												"repository",
												"parties"
											]
										},
										"description": "Create a party in payeefsp. So that GET /parties can be successful."
									},
									"response": [
										{
											"name": "An error occured processing the request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/repository/parties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"repository",
														"parties"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The party was created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"middleName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"dateOfBirth\": \"<string>\",\n    \"merchantClassificationCode\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/repository/parties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"repository",
														"parties"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "35a8cc85-d4c7-427c-b1ff-557b14d02cf4",
				"type": "text/javascript",
				"exec": [
					"if (pm.environment.get('WS02_OAUTH_ENABLED') === 'true') {",
					"",
					"    // Get Token for Hub Operator",
					"    let authHeader = btoa(`${pm.environment.get('HUB_OPERATOR_CONSUMER_KEY')}:${pm.environment.get('HUB_OPERATOR_CONSUMER_SECRET')}`);",
					"    let getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('HUB_OPERATOR_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Payerfsp",
					"    authHeader = btoa(`${pm.environment.get('PAYERFSP_CONSUMER_KEY')}:${pm.environment.get('PAYERFSP_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('PAYERFSP_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Payeefsp",
					"    authHeader = btoa(`${pm.environment.get('PAYEEFSP_CONSUMER_KEY')}:${pm.environment.get('PAYEEFSP_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('PAYEEFSP_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Testfsp1",
					"    authHeader = btoa(`${pm.environment.get('TESTFSP1_CONSUMER_KEY')}:${pm.environment.get('TESTFSP1_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('TESTFSP1_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Testfsp2",
					"    authHeader = btoa(`${pm.environment.get('TESTFSP2_CONSUMER_KEY')}:${pm.environment.get('TESTFSP2_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('TESTFSP2_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Testfsp3",
					"    authHeader = btoa(`${pm.environment.get('TESTFSP3_CONSUMER_KEY')}:${pm.environment.get('TESTFSP3_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('TESTFSP3_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"      // Get Token for SIM1",
					"    authHeader = btoa(`${pm.environment.get('SIM1_CONSUMER_KEY')}:${pm.environment.get('SIM1_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('SIM1_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"    // Get Token for SIM2",
					"    authHeader = btoa(`${pm.environment.get('SIM2_CONSUMER_KEY')}:${pm.environment.get('SIM2_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('SIM2_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for SIM3",
					"    authHeader = btoa(`${pm.environment.get('SIM3_CONSUMER_KEY')}:${pm.environment.get('SIM3_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('SIM3_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for Testfsp4",
					"    authHeader = btoa(`${pm.environment.get('TESTFSP4_CONSUMER_KEY')}:${pm.environment.get('TESTFSP4_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('TESTFSP4_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"    // Get Token for SIM4",
					"    authHeader = btoa(`${pm.environment.get('SIM4_CONSUMER_KEY')}:${pm.environment.get('SIM4_CONSUMER_SECRET')}`);",
					"    getTokenRequest = {",
					"        url: pm.environment.get(\"HOST_SWITCH\") + '/token/',",
					"        method: 'POST',",
					"        header: {",
					"            \"Authorization\": `Basic ${authHeader}`,",
					"            'Content-Type': 'application/x-www-form-urlencoded',",
					"        },",
					"        body: {",
					"            mode: 'urlencoded',",
					"            urlencoded: [",
					"                { key: \"grant_type\", value: \"client_credentials\", disabled: false },",
					"            ]",
					"        }",
					"    };",
					"    pm.sendRequest(getTokenRequest, function (err, response) {",
					"        var jsonData = response.json();",
					"        pm.environment.set('SIM4_BEARER_TOKEN', jsonData.access_token);",
					"    });",
					"",
					"}",
					"",
					"if(!pm.environment.get('jrsassign')) {",
					"    pm.sendRequest('http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js', function (err, response) {",
					"        pm.environment.set('jrsassign', response.text());",
					"    });",
					"}",
					"",
					"// Get Token for Gmail API",
					"let getGoogleTokenRequest = {",
					"    url: 'https://oauth2.googleapis.com/token',",
					"    method: 'POST',",
					"    header: {",
					"        'Content-Type': 'application/x-www-form-urlencoded',",
					"    },",
					"    body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            { key: \"client_id\", value: pm.environment.get(\"GOOGLE_CLIENT_ID\") },",
					"            { key: \"client_secret\", value: pm.environment.get(\"GOOGLE_CLIENT_SECRET\") },",
					"            { key: \"grant_type\", value: \"refresh_token\" },",
					"            { key: \"refresh_token\", value: pm.environment.get(\"GOOGLE_REFRESH_TOKEN\") }",
					"        ]",
					"    }",
					"};",
					"pm.sendRequest(getGoogleTokenRequest, function (err, response) {",
					"    const jsonData = response.json();",
					"    pm.environment.set('googleServisesAccessToken', jsonData.access_token);",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "3cb4b23f-9585-452d-8000-809e03767245",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}